apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.app.name }}-database-config
  namespace: {{ .Release.Namespace }}
data:
  postgresql_master.conf: |
    data_directory = '/data/pgdata'
    hba_file = '/config/pg_hba.conf'
    ident_file = '/config/pg_ident.conf'

    port = {{ .Values.db.port }}
    listen_addresses = '*'

    archive_mode = on
    archive_command = 'test ! -f /data/archive/%f && cp %p /data/archive/%f'

  postgresql_slave.conf: |
    data_directory = '/data/pgdata'
    hba_file = '/config/pg_hba.conf'
    ident_file = '/config/pg_ident.conf'

    port = {{ .Values.db.port }}
    listen_addresses = '*'

  pg_hba.conf: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    host    all             all             10.244.0.0/16           md5
    # "local" is for Unix domain socket connections only
    local   all             all                                     trust
    # IPv4 local connections:
    host    all             all             127.0.0.1/32            trust
    # IPv6 local connections:
    host    all             all             ::1/128                 trust
    # Allow replication connections from localhost, by a user with the
    # replication privilege.
    local   replication     all                                     trust
    host    replication     all             127.0.0.1/32            trust
    host    replication     all             ::1/128                 trust

  setup.sh: |
    cp /config-init/* /config

    if [[ $HOSTNAME == *database*-0 ]]; then
        cp /config/postgresql_master.conf /config/postgresql.conf

        mkdir -p /data/archive
        chown -R postgres:postgres /data/archive
    else
        cp /config/postgresql_slave.conf /config/postgresql.conf
    fi

    echo "CREATE USER ${POSTGRES_REPLICA_USER} REPLICATION LOGIN ENCRYPTED PASSWORD '${POSTGRES_REPLICA_PASSWORD}';" > \
        /docker-entrypoint-initdb.d/init.sql

