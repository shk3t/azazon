apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.app.name }}-database-statefulset
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-db
  serviceName: {{ .Values.app.name }}-database-service
  replicas: 3
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-db
    spec:
      initContainers:
      - name: postgres-init
        image: postgres:18
        command: [ "bash", "/config-init/setup.sh" ]
        env:
        - name: PGDATA
          value: "/data/pgdata"
        - name: REPLICA_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: REPLICA_USER
        - name: REPLICA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: REPLICA_PASSWORD
        volumeMounts:
        - name: config-init
          mountPath: /config-init
        - name: config
          mountPath: /config
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: data
          mountPath: /data
      containers:
      - name: postgres
        image: postgres:18
        args: ["-c", "config_file=/config/postgresql.conf"]
        ports:
        - name: {{ .Values.app.name }}-db-port
          containerPort: {{ .Values.db.port }}
        env:
        - name: PGDATA
          value: "/data/pgdata"
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: POSTGRES_PASSWORD
        - name: REPLICA_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: REPLICA_USER
        - name: REPLICA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.name }}-database-secret
              key: REPLICA_PASSWORD
        volumeMounts:
        - name: config-init
          mountPath: /config-init
        - name: config
          mountPath: /config
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: config-init
        configMap:
          name: {{ .Values.app.name }}-database-config
          items:
          - key: "postgresql_master.conf"
            path: "postgresql_master.conf"
          - key: "postgresql_slave.conf"
            path: "postgresql_slave.conf"
          - key: "pg_hba.conf"
            path: "pg_hba.conf"
          - key: "setup.sh"
            path: "setup.sh"
      - name: initdb
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Mi
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: "standard"
      resources:
        requests:
          storage: 200Mi
